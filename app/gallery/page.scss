@import '../../public/scss/_colors.scss';

/* Three column layout */
.columns {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  background-color: $color3;
  width: 100%;
  max-width: 80em;
  margin: 0 auto;
  position: relative;
}

/* Inside one column, lay out all items in column direction */
.column {
  --column-offset: 10vh;
  display: flex;
  flex-direction: column;
  padding: var(--column-offset) 0;
}

/* Limit site of the images */
.column__item-imgwrap {
  margin-top: 5px;
  margin-bottom: 5px;
  margin-left: 10px;
  margin-right: 10px;

  @media (min-width: 768px) {
    & {
      margin-top: 15px;
      margin-bottom: 15px;
      margin-left: 30px;
      margin-right: 30px;
    }
  }

  img {
    border-radius: 1em;
    width: 100%;
    height: auto;
    aspect-ratio: 0.75;
    object-fit: cover;
  }
}

// The next code can be found on https://scroll-driven-animations.style/
@supports (animation-timeline: scroll()) {

  /* As we're about to shift content out of .columns, we need it to hide its overflow */
  .columns {
    overflow-y: hidden;
  }

  .column-reverse {
    /* Flip item order in reverse columns */
    flex-direction: column-reverse;
  }

  /* Set up Animation */
  @keyframes adjust-position {

    /* Start position: shift entire column up, but not so that it goes out of view */
    from {
      transform: translateY(calc(-100% + 100vh));
    }

    /* End position: shift entire column down, but not so that it goes out of view */
    to {
      transform: translateY(calc(100% - 100vh));
    }
  }

  /* Hook our animation with the timeline to our columns */
  .column-reverse {
    animation: adjust-position linear forwards;
    animation-timeline: scroll(root block);
  }
}